// $ANTLR 2.7.7 (2006-11-01): XQuery.g -> XQueryTokenTypes.txt$
XQuery    // output token vocab name
QNAME=4
EQNAME=5
PREDICATE=6
FLWOR=7
PARENTHESIZED=8
ABSOLUTE_SLASH=9
ABSOLUTE_DSLASH=10
WILDCARD=11
PREFIX_WILDCARD=12
FUNCTION=13
DYNAMIC_FCALL=14
UNARY_MINUS=15
UNARY_PLUS=16
XPOINTER=17
XPOINTER_ID=18
VARIABLE_REF=19
VARIABLE_BINDING=20
ELEMENT=21
ATTRIBUTE=22
ATTRIBUTE_CONTENT=23
TEXT=24
VERSION_DECL=25
NAMESPACE_DECL=26
DEF_NAMESPACE_DECL=27
DEF_COLLATION_DECL=28
DEF_FUNCTION_NS_DECL=29
CONTEXT_ITEM_DECL=30
ANNOT_DECL=31
GLOBAL_VAR=32
FUNCTION_DECL=33
INLINE_FUNCTION_DECL=34
FUNCTION_INLINE=35
FUNCTION_TEST=36
MAP=37
MAP_TEST=38
LOOKUP=39
ARRAY=40
ARRAY_TEST=41
PROLOG=42
OPTION=43
ATOMIC_TYPE=44
MODULE=45
ORDER_BY=46
GROUP_BY=47
POSITIONAL_VAR=48
CATCH_ERROR_CODE=49
CATCH_ERROR_DESC=50
CATCH_ERROR_VAL=51
MODULE_DECL=52
MODULE_IMPORT=53
SCHEMA_IMPORT=54
ATTRIBUTE_TEST=55
COMP_ELEM_CONSTRUCTOR=56
COMP_ATTR_CONSTRUCTOR=57
COMP_TEXT_CONSTRUCTOR=58
COMP_COMMENT_CONSTRUCTOR=59
COMP_PI_CONSTRUCTOR=60
COMP_NS_CONSTRUCTOR=61
COMP_DOC_CONSTRUCTOR=62
PRAGMA=63
GTEQ=64
SEQUENCE=65
LITERAL_xpointer="xpointer"=66
LPAREN("opening parenthesis '('")=67
RPAREN("closing parenthesis ')'")=68
NCNAME("name")=69
LITERAL_xquery="xquery"=70
LITERAL_version="version"=71
SEMICOLON("semicolon ';'")=72
LITERAL_module="module"=73
LITERAL_namespace="namespace"=74
EQ("=")=75
STRING_LITERAL("string literal")=76
LITERAL_declare="declare"=77
LITERAL_default="default"=78
"boundary-space"=79
LITERAL_ordering="ordering"=80
LITERAL_construction="construction"=81
"base-uri"=82
"copy-namespaces"=83
LITERAL_option="option"=84
LITERAL_function="function"=85
LITERAL_variable="variable"=86
LITERAL_context="context"=87
LITERAL_item="item"=88
MOD=89
LITERAL_import="import"=90
LITERAL_encoding="encoding"=91
LITERAL_collation="collation"=92
LITERAL_element="element"=93
LITERAL_order="order"=94
LITERAL_empty="empty"=95
LITERAL_greatest="greatest"=96
LITERAL_least="least"=97
LITERAL_preserve="preserve"=98
LITERAL_strip="strip"=99
LITERAL_ordered="ordered"=100
LITERAL_unordered="unordered"=101
COMMA=102
"no-preserve"=103
LITERAL_inherit="inherit"=104
"no-inherit"=105
DOLLAR("dollar sign '$'")=106
LITERAL_external="external"=107
COLON=108
LCURLY("opening curly brace '{'")=109
RCURLY("closing curly brace '}'")=110
LITERAL_schema="schema"=111
BRACED_URI_LITERAL("braced uri literal")=112
LITERAL_as="as"=113
LITERAL_at="at"=114
"empty-sequence"=115
QUESTION("question mark '?'")=116
STAR("wildcard '*'")=117
PLUS("+")=118
LITERAL_map="map"=119
LITERAL_array="array"=120
LITERAL_for="for"=121
LITERAL_let="let"=122
LITERAL_try="try"=123
LITERAL_some="some"=124
LITERAL_every="every"=125
LITERAL_if="if"=126
LITERAL_switch="switch"=127
LITERAL_typeswitch="typeswitch"=128
LITERAL_update="update"=129
LITERAL_replace="replace"=130
LITERAL_value="value"=131
LITERAL_insert="insert"=132
LITERAL_delete="delete"=133
LITERAL_rename="rename"=134
LITERAL_with="with"=135
LITERAL_into="into"=136
LITERAL_preceding="preceding"=137
LITERAL_following="following"=138
LITERAL_catch="catch"=139
UNION("union")=140
LITERAL_return="return"=141
LITERAL_where="where"=142
LITERAL_in="in"=143
LITERAL_allowing="allowing"=144
LITERAL_by="by"=145
LITERAL_stable="stable"=146
LITERAL_ascending="ascending"=147
LITERAL_descending="descending"=148
LITERAL_group="group"=149
LITERAL_satisfies="satisfies"=150
LITERAL_case="case"=151
LITERAL_then="then"=152
LITERAL_else="else"=153
LITERAL_or="or"=154
LITERAL_and="and"=155
LITERAL_instance="instance"=156
LITERAL_of="of"=157
LITERAL_treat="treat"=158
LITERAL_castable="castable"=159
LITERAL_cast="cast"=160
BEFORE=161
AFTER=162
LITERAL_eq="eq"=163
LITERAL_ne="ne"=164
LITERAL_lt="lt"=165
LITERAL_le="le"=166
LITERAL_gt="gt"=167
LITERAL_ge="ge"=168
GT(">")=169
NEQ("!=")=170
LT("<")=171
LTEQ("<=")=172
LITERAL_is="is"=173
LITERAL_isnot="isnot"=174
CONCAT("||")=175
LITERAL_to="to"=176
MINUS("-")=177
LITERAL_div="div"=178
LITERAL_idiv="idiv"=179
LITERAL_mod="mod"=180
BANG=181
PRAGMA_START=182
PRAGMA_END("pragma expression")=183
LITERAL_union="union"=184
LITERAL_intersect="intersect"=185
LITERAL_except="except"=186
SLASH("single slash '/'")=187
DSLASH("double slash '//'")=188
LITERAL_text="text"=189
LITERAL_node="node"=190
LITERAL_attribute="attribute"=191
LITERAL_comment="comment"=192
"namespace-node"=193
"processing-instruction"=194
"document-node"=195
LITERAL_document="document"=196
HASH=197
SELF(".")=198
XML_COMMENT("XML comment")=199
XML_PI("processing instruction")=200
LPPAREN("opening brace '['")=201
STRING_CONSTRUCTOR_START("start of string constructor")=202
RPPAREN("closing brace ']'")=203
AT("@ char")=204
PARENT("..")=205
LITERAL_child="child"=206
LITERAL_self="self"=207
LITERAL_descendant="descendant"=208
"descendant-or-self"=209
"following-sibling"=210
LITERAL_parent="parent"=211
LITERAL_ancestor="ancestor"=212
"ancestor-or-self"=213
"preceding-sibling"=214
ARROW_OP("arrow operator")=215
INTEGER_LITERAL=216
STRING_CONSTRUCTOR_END("start of string constructor")=217
STRING_CONSTRUCTOR_CONTENT("string constructor content")=218
STRING_CONSTRUCTOR_INTERPOLATION_START("start of interpolated expression")=219
STRING_CONSTRUCTOR_INTERPOLATION_END("end of interpolated expression")=220
DOUBLE_LITERAL=221
DECIMAL_LITERAL=222
"schema-element"=223
END_TAG_START("XML end tag")=224
QUOT("double quote '\"'")=225
APOS("single quote '")=226
QUOT_ATTRIBUTE_CONTENT=227
ESCAPE_QUOT=228
APOS_ATTRIBUTE_CONTENT=229
ESCAPE_APOS=230
ELEMENT_CONTENT=231
XML_COMMENT_END("end of XML comment")=232
XML_PI_END("end of processing instruction")=233
XML_CDATA("CDATA section")=234
LITERAL_collection="collection"=235
LITERAL_validate="validate"=236
XML_PI_START("start of processing instruction")=237
XML_CDATA_START("CDATA section start")=238
XML_CDATA_END("end of CDATA section")=239
LETTER=240
DIGITS=241
HEX_DIGITS=242
NMSTART=243
NMCHAR=244
WS=245
XQDOC_COMMENT("XQuery XQDoc comment")=246
EXPR_COMMENT("XQuery comment")=247
PREDEFINED_ENTITY_REF=248
CHAR_REF=249
S=250
NEXT_TOKEN=251
CHAR=252
BASECHAR=253
IDEOGRAPHIC=254
COMBINING_CHAR=255
DIGIT=256
EXTENDER=257
